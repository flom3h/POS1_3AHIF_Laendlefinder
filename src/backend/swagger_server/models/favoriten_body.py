# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class FavoritenBody(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, uid: int=None, eid: int=None):  # noqa: E501
        """FavoritenBody - a model defined in Swagger

        :param uid: The uid of this FavoritenBody.  # noqa: E501
        :type uid: int
        :param eid: The eid of this FavoritenBody.  # noqa: E501
        :type eid: int
        """
        self.swagger_types = {
            'uid': int,
            'eid': int
        }

        self.attribute_map = {
            'uid': 'uid',
            'eid': 'eid'
        }
        self._uid = uid
        self._eid = eid

    @classmethod
    def from_dict(cls, dikt) -> 'FavoritenBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The favoriten_body of this FavoritenBody.  # noqa: E501
        :rtype: FavoritenBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uid(self) -> int:
        """Gets the uid of this FavoritenBody.


        :return: The uid of this FavoritenBody.
        :rtype: int
        """
        return self._uid

    @uid.setter
    def uid(self, uid: int):
        """Sets the uid of this FavoritenBody.


        :param uid: The uid of this FavoritenBody.
        :type uid: int
        """
        if uid is None:
            raise ValueError("Invalid value for `uid`, must not be `None`")  # noqa: E501

        self._uid = uid

    @property
    def eid(self) -> int:
        """Gets the eid of this FavoritenBody.


        :return: The eid of this FavoritenBody.
        :rtype: int
        """
        return self._eid

    @eid.setter
    def eid(self, eid: int):
        """Sets the eid of this FavoritenBody.

        :param eid: The eid of this FavoritenBody.
        :type eid: int
        """
        if eid is None:
            raise ValueError("Invalid value for `eid`, must not be `None`")  # noqa: E501

        self._eid = eid
