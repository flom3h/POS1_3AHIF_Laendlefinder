openapi: 3.0.0
info:
  title: Events API
  description: Eine API zur Verwaltung von User-Logins und Event-Abfragen
  version: 1.0.0
servers:
- url: /
paths:
  /login:
    post:
      tags:
      - login
      summary: Benutzer logt sich ein
      operationId: user_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_body"
        required: true
      responses:
        "201":
          description: Benutzer konnte sich einloggen
        "404":
          description: Benutzer konnte nicht gefunden werden
      x-openapi-router-controller: swagger_server.controllers.login_controller
  /registrieren:
    post:
      tags:
      - registrieren
      summary: Benutzer erstellt seinen Account
      operationId: user_reg_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reg_body"
        required: true
      responses:
        "201":
          description: Benutzer konnte erstellt werden
        "404":
          description: Benutzer konnte nicht erstellt werden
      x-openapi-router-controller: swagger_server.controllers.registrieren_controller
  /update/{uid}:
    post:
      tags:
      - Benutzer aktualisieren
      summary: Benutzer aktualisiert seine Daten
      operationId: update_user_data
      parameters:
      - name: uid
        in: path
        description: Die ID des Benutzers, dessen Daten aktualisiert werden sollen
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/reg_body"
        required: true
      responses:
        "200":
          description: Benutzerdaten erfolgreich aktualisiert
        "404":
          description: Benutzer nicht gefunden
        "500":
          description: Fehler beim Aktualisieren der Benutzerdaten
      x-openapi-router-controller: swagger_server.controllers.registrieren_controller
  /kategorien:
    get:
      tags:
      - abrufen
      summary: Kategorien abrufen von API
      operationId: kategorien_get
      responses:
        "200":
          description: Erfolgreiches Erhalten der API Kategorien
        "500":
          description: Fehler beim Abrufen der Kategorien
      x-openapi-router-controller: swagger_server.controllers.abrufen_controller
  /user_id/{email}:
    get:
      tags:
      - abrufen
      summary: User-ID eines Benutzers abrufen
      operationId: get_user_id
      parameters:
      - name: email
        in: path
        description: Die E-Mail-Adresse des Benutzers, dessen ID abgerufen werden soll
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Erfolgreiches Abrufen der User-ID
        "404":
          description: Benutzer nicht gefunden
      x-openapi-router-controller: swagger_server.controllers.abrufen_controller
  /user/{uid}:
    get:
      tags:
      - abrufen
      summary: Benutzerinformationen abrufen
      operationId: get_user_data
      parameters:
      - name: uid
        in: path
        description: Die ID des Benutzers, dessen Informationen abgerufen werden sollen
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Erfolgreiches Abrufen der Benutzerinformationen
        "404":
          description: Benutzer nicht gefunden
        "500":
          description: Fehler beim Abrufen der Benutzerinformationen
      x-openapi-router-controller: swagger_server.controllers.registrieren_controller
  /events:
    get:
      tags:
      - abrufen
      summary: Events abrufen (mit optionalen Filtern)
      operationId: events_get
      parameters:
      - name: eventname
        in: query
        description: Filtere Events nach Eventnamen
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: kategorie
        in: query
        description: Filtere Events nach Kategorie
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ort
        in: query
        description: Filtere Events nach Ort
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: region
        in: query
        description: Filtere Events nach Region
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: datum
        in: query
        description: Filtere Events nach Datum (Format YYYY-MM-DD)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Erfolgreiche Antwort mit Eventdaten
        "500":
          description: Fehler beim Abrufen der Events
      x-openapi-router-controller: swagger_server.controllers.abrufen_controller
  /events/{eid}:
    get:
      tags:
      - abrufen
      summary: Details zu einem einzelnen Event abrufen
      operationId: event_by_id_get
      parameters:
      - name: eid
        in: path
        description: Die ID des Events
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Erfolgreiche Antwort mit Eventdetails
        "404":
          description: Event nicht gefunden
        "500":
          description: Fehler beim Abrufen des Events
      x-openapi-router-controller: swagger_server.controllers.abrufen_controller
  /events/import:
    post:
      tags:
      - abrufen
      summary: Importiert Events von der externen API in die Datenbank
      operationId: events_import_post
      responses:
        "201":
          description: Events erfolgreich importiert
        "500":
          description: Fehler beim Importieren der Events
      x-openapi-router-controller: swagger_server.controllers.abrufen_controller
  /favoriten/{uid}:
    get:
      tags:
      - favoriten
      summary: Favoriten eines Benutzers abrufen
      operationId: favoriten_get
      parameters:
      - name: uid
        in: path
        description: "Der Benutzer, dessen Favoriten abgerufen werden"
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Liste der Favoriten wurde erfolgreich abgerufen
        "404":
          description: Keine Favoriten für den angegebenen Benutzer gefunden
        "500":
          description: Fehler beim Abrufen der Favoriten
      x-openapi-router-controller: swagger_server.controllers.favoriten_controller
      
  /favoriten/{uid}/{eid}:
    get:
      tags:
      - favoriten
      summary: Überprüfen, ob ein Event in den Favoriten eines Benutzers ist
      operationId: is_favorit
      parameters:
      - name: uid
        in: path
        description: "Der Benutzer, dessen Favoriten überprüft werden"
        required: true
        schema:
          type: integer
      - name: eid
        in: path
        description: "Die ID des Events, das überprüft werden soll"
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Event ist in den Favoriten des Benutzers
        "404":
          description: Event oder Benutzer nicht gefunden
        "500":
          description: Fehler beim Überprüfen der Favoriten
      x-openapi-router-controller: swagger_server.controllers.favoriten_controller
  /favoriten:
    post:
      tags:
      - favoriten
      summary: Event zu den Favoriten hinzufügen
      operationId: favoriten_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/favoriten_body"
        required: true
      responses:
        "201":
          description: Event erfolgreich zu den Favoriten hinzugefügt
        "400":
          description: Ungültige Anfrage (z. B. fehlender Parameter)
        "404":
          description: Benutzer oder Event nicht gefunden
        "500":
          description: Serverfehler beim Hinzufügen zu Favoriten
      x-openapi-router-controller: swagger_server.controllers.favoriten_controller
  /favoriten/delete/{uid}/{eid}:
    delete:
      tags:
      - favoriten
      summary: Event aus den Favoriten entfernen
      operationId: favoriten_delete
      parameters:
      - name: uid
        in: path
        description: "Der Benutzer, dessen Favoriten bearbeitet werden"
        required: true
        schema:
          type: integer
      - name: eid
        in: path
        description: "Die ID des Events, das entfernt werden soll"
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: Event wurde erfolgreich aus den Favoriten entfernt
        "404":
          description: Benutzer oder Event nicht gefunden
        "500":
          description: Fehler beim Entfernen des Events aus den Favoriten
      x-openapi-router-controller: swagger_server.controllers.favoriten_controller
      
  

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    user_body:
      required:
      - email
      - passwort
      type: object
      properties:
        email:
          type: string
        passwort:
          type: string
    reg_body:
      required:
      - firstname
      - lastname
      - email
      - passwort
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        email:
          type: string
        passwort:
          type: string
    favoriten_body:
      required:
      - uid
      - eid
      type: object
      properties:
        uid:
          type: integer
        eid:
          type: integer
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic Authentication für die API

